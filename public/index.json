
[{"content":"","date":"July 28, 2025","externalUrl":null,"permalink":"/tags/code/","section":"Tags","summary":"","title":"Code","type":"tags"},{"content":"This page displays my projects and code\n","date":"July 28, 2025","externalUrl":null,"permalink":"/code/","section":"Data and code","summary":"","title":"Data and code","type":"code"},{"content":"Hello! I am a PhD candidate in Economics at Emory University, I will join Beihang University in Fall 2025. My research interests are macroeconomics, international finance, and computational economics.\n➡️ Curriculum Vitae ➡️ Email: tianhao.zhao@emory.edu ","date":"July 28, 2025","externalUrl":null,"permalink":"/","section":"homepage","summary":"","title":"homepage","type":"page"},{"content":"","date":"July 28, 2025","externalUrl":null,"permalink":"/tags/julia/","section":"Tags","summary":"","title":"Julia","type":"tags"},{"content":"Project link: github.com/Clpr/MultivariateMarkovChain.jl This package provides flexible API to define, approximate, manupulate, estimate and simulate multivariate (vector-valued) finite state Markov chains in discrete time. Some popular algorithms are also implemented such as Tauchen (1985) and Young (2010) non-stochastic simulation methods. It is super helpful in the parameterization of dynamic macroeconomic models as well as other generic numerical applications of stochastic analysis.\nTo learn more about the functionalities and usage, check the project on GitHub.\nThis package has not been registered at Julia\u0026rsquo;s general registry yet. To install it, run:\npkg\u0026gt; add \u0026#34;https://github.com/Clpr/MultivariateMarkovChains.jl.git\u0026#34; In the future, one may run:\npkg\u0026gt; add MultivariateMarkovChains ","date":"July 28, 2025","externalUrl":null,"permalink":"/code/multivariatemarkovchain.jl/","section":"Data and code","summary":"This package provides types and methods for modeling vector-valued Markov chains in discrete time. It is useful for dynamic macroeconomic models and generic stochastic analysis. Project link: github.com/Clpr/MultivariateMarkovChain.jl","title":"MultivariateMarkovChain.jl","type":"code"},{"content":"","date":"July 28, 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"July 16, 2025","externalUrl":null,"permalink":"/posts/","section":"Blog","summary":"","title":"Blog","type":"posts"},{"content":"Blowfish​ is a highly flexible framework within the ​Hugo​ ecosystem, allowing users to quickly build visually appealing websites in just minutes. A typical Blowfish (and Hugo) website is structured around \u0026ldquo;posts\u0026rdquo; or \u0026ldquo;articles.\u0026rdquo; Each post may include a cover image, commonly referred to as a \u0026ldquo;thumbnail\u0026rdquo; as demonstrated on this website.\nAn example cover/thumbnail picture The default ways to specify the cover picture for a post:\nPutting a picture file with substring \u0026ldquo;feature\u0026rdquo; in the same folder as the index.md of the post Use featureimage: PICTURE_URL to cite an online picture While Blowfish (and Hugo) allows each post to specify its own cover image, this approach can lead to inefficiencies. Storing duplicate copies of the same image across multiple posts is unnecessary, especially when cover images are large. A more efficient approach would be to reuse a single image (or a set of images) stored in assets/ or another directory, rather than embedding duplicates in each post. However, this is not currently supported. Blowfish’s featureimage parameter only accepts remote URLs, not local assets. This post introduces a new parameter, featureAsset (or a name of your choice), which allows referencing a local asset image (e.g., featureAsset: \u0026quot;img/feature_default.png\u0026quot;) directly in a post’s TOML front matter. This enables efficient reuse of cover images while maintaining flexibility.\nThis post is based on the discussion thread by @f-hollow on GitHub.\nIdea: We have to tell the compiler when and where to find the asset picture in the process of website building. This requries to modify the theme partial templates according to which hero style you are applying to your website.\nFisrt, copy themes/blowfish/layouts/partials/article-link/ and themes/blowfish/layouts/partials/hero/ to layouts/partials/ folder. The files stored in layouts/partials/ would overwrite the default Blowfish building files in the compilation process.\nExplain: the building files in article-link/ controls how the gallery files (named as _index.md) are parsed and compiled Explain: the building files in hero/ controls how the generic page/post/article files (named as index.md) are parsed and compiled Then, let\u0026rsquo;s check the building files in layouts/partials/article-link/. In the Blowfish version of writing this post (2.88.1), there should be 3 files:\nsimple.html: for showCards=false in the [list] section of the TOML file config/_default/params.toml. This building file works for the case where the posts are listed as top-to-bottom lists. card.html and card-related.html: for showCards=true. These builidng files works for the case where the posts are organized as cards. WLOG, let\u0026rsquo;s check simple.html. Reading this building file, one can quickly locate the related shortcodes that check and set up the cover pictures. e.g.\n1{{- with $.Params.images -}} 2{{- range first 6 . }} 3\u0026lt;meta property=\u0026#34;og:image\u0026#34; content=\u0026#34;{{ . | absURL }}\u0026#34; /\u0026gt;{{ end -}} 4{{- else -}} 5{{- $images := $.Resources.ByType \u0026#34;image\u0026#34; -}} 6{{- $featured := $images.GetMatch \u0026#34;*feature*\u0026#34; -}} 7 8{{- if not $featured }}{{ $featured = $images.GetMatch \u0026#34;{*cover*,*thumbnail*}\u0026#34; }}{{ end -}} 9{{ if and .Params.featureimage (not $featured) }} 10{{- $url:= .Params.featureimage -}} 11{{ $featured = resources.GetRemote $url }} 12{{ end }} 13{{- if not $featured }}{{ with .Site.Params.defaultFeaturedImage }}{{ $featured = resources.Get . }}{{ end }}{{ end -}} 14{{ if .Params.hideFeatureImage }}{{ $featured = false }}{{ end }} 15{{- with $featured -}} 16{{ if or $disableImageOptimization (strings.HasSuffix $featured \u0026#34;.svg\u0026#34;)}} 17 {{ with . }} 18 \u0026lt;div class=\u0026#34;{{ $articleImageClasses }}\u0026#34; style=\u0026#34;background-image:url({{ .RelPermalink }});\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 19 {{ end }} 20 {{ else }} 21 {{ with .Resize \u0026#34;600x\u0026#34; }} 22 \u0026lt;div class=\u0026#34;{{ $articleImageClasses }}\u0026#34; style=\u0026#34;background-image:url({{ .RelPermalink }});\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 23 {{ end }} 24 {{ end }} 25{{- else -}} 26{{- with $.Site.Params.images }} 27\u0026lt;meta property=\u0026#34;og:image\u0026#34; content=\u0026#34;{{ index . 0 | absURL }}\u0026#34; /\u0026gt;{{ end -}} 28{{- end -}} 29{{- end -}} This shortcode block basiclly: first search if there exists a file with substring feature, cover, thumbnail in the same folder; if not, then check if featureimage parameter is set in the TOML front matter; if not, then use default feature picture (set in config/_default/params.toml); if no default picture, then hide the cover picture.\nThen, we need to modify this block by inserting the following condition codes between line 6 and 8 (to prioritize our specification):\n1{{ if and .Params.featureAsset (not $featured) }} 2 {{- $genericImage:= .Params.featureAsset -}} 3 {{ $featured = resources.Get $genericImage }} 4{{ end }} This shortcode block basically does: check if there is a parameter featureAsset in the TOML front matter; if yes and the featured value has not been successfully set yet, then set it using the provided path (resources.Get RELATIVE_PATH refers to the assets/ folder which should be the root folder of the relative path).\nAfter understanding the idea, one can modify all the other building files in the same way. Then, a Markdown post file (not the gallery file) can have a TOML front matter like:\n--- title: \u0026#34;Blowfish: One cover picture for all posts\u0026#34; date: 2025-07-16T00:00:01-07:00 showAuthor: true showAuthorsBadges : true showSummary: true summary: \u0026#34;Shows how to specify cover/thumbnail picture for each post using assets without duplicate copies.\u0026#34; featureAsset: \u0026#34;img/feature_default.webp\u0026#34; --- ","date":"July 16, 2025","externalUrl":null,"permalink":"/posts/001_customthumbnailpicture/","section":"Blog","summary":"Shows how to specify cover/thumbnail picture for each post using assets without duplicate copies.","title":"Blowfish: One cover picture for all posts","type":"posts"},{"content":"Project link: github.com/Clpr/AdaptiveSG.jl This package provides object-oriented API to define, train, evaluate and adapt multi-linear Adaptive Sparse Grid (ASG) interpolations. It can be used to solve high-dimensional discrete/continuous time models; perform high-dimensional non-parametric estimations; and help with other high-dimensional numerical exercises.\nThis package has been registered at Julia\u0026rsquo;s general registry. To install it, simply run:\npkg\u0026gt; add AdaptiveSG.jl ","date":"May 1, 2025","externalUrl":null,"permalink":"/code/adaptivesg.jl/","section":"Data and code","summary":"This package provides object-oriented API to define, train, evaluate and adapt multi-linear Adaptive Sparse Grid (ASG) interpolations. Project link: github.com/Clpr/AdaptiveSG.jl","title":"AdaptiveSG.jl","type":"code"},{"content":"Seesion: Introduction to continuous time macroeconomics\nSlides ","date":"April 30, 2025","externalUrl":null,"permalink":"/teach/2025_beihang_macro2/","section":"Teaching","summary":"Spring 2025, Beihang University. Seesion: Introduction to continuous time macroeconomics","title":"Advanced Macroeconomics (Session 1)","type":"teach"},{"content":" Teaching assistantship # ECON 421: Microeconometric Data Analytics, Spring 2024 (Spring 2024) ECON 610: Macroeconomic Theory (Fall 2023) ECON 212: Intermediate Macroeconomics (Fall 2023) ECON 363: Political Economy of China (Spring 2023, Fall 2021, Fall 2020) ECON 112: Principle of Macroeconomics (Spring 2022) ","date":"April 30, 2025","externalUrl":null,"permalink":"/teach/","section":"Teaching","summary":"","title":"Teaching","type":"teach"},{"content":" Project URL: https://github.com/Clpr/BoxDomains.jl BoxDomains.jl provides convenient abstractions of mutli-dimensional bounded space like\n$$ \\mathcal{X} := \\prod_{j=1}^D [\\underline{x}_j, \\bar{x}_j] $$which are everywhere in economic modeling. The package allows users to define, manipulate, slice, transform, and discretize such spaces. The data structures are lazy. In particular, most of the operations overload Julia Base such that users can have a native coding experience.\nThis package has been registered at Julia\u0026rsquo;s general registry. To install it, simply run:\npkg\u0026gt; add BoxDomains.jl ","date":"April 30, 2025","externalUrl":null,"permalink":"/code/boxdomains.jl/","section":"Data and code","summary":"A Julia implementation of box domains like [a1,b1]*[a2,b2]\u0026hellip;. which are everywhere in economic modeling. The package allows users to define, manipulate, slice, transform, and discretize such spaces. In particular, most of the operations overload Julia Base such that users can have a native coding experience. Project URL: \u003ccode\u003ehttps://github.com/Clpr/BoxDomains.jl\u003c/code\u003e","title":"BoxDomains.jl","type":"code"},{"content":"Project URL: https://github.com/Clpr/ConstrainedSimplexSearch.jl This repository implements the Constrained Nelder-Mead (simplex) Search algorithm which is generalized from the unconstrained Nelder-Mead search method. It handles generic non-linear equality and inequality constraints using penalty which guides the simplex to move towards the admissible space. This package provides a robust solver for high-dimensional quantitative macroeconomic models where: 1. endogeneous constraints are imposed; 2. boundary bindingness are important; 3. High-dimensional numerical approximations are oscilliating.\nThis package has been registered at Julia\u0026rsquo;s general registry. To install it, simply run:\npkg\u0026gt; add ConstrainedSimplexSearch.jl ","date":"April 29, 2025","externalUrl":null,"permalink":"/code/constrainedsimplexsearch.jl/","section":"Data and code","summary":"This repository implements the Constrained Nelder-Mead (simplex) Search algorithm. It handles generic non-linear equality and inequality constraints using penalty which guides the simplex to move towards the admissible space. Project URL: \u003ccode\u003ehttps://github.com/Clpr/ConstrainedSimplexSearch.jl\u003c/code\u003e","title":"ConstrainedSimplexSearch.jl","type":"code"},{"content":"Project URL: https://github.com/Clpr/CountyPlus CountyPlus is an open-source panel dataset that covers 3000+ U.S. counties from 2003 to 2019. It consists of 100+ variables, including demographic, geographic, household balance sheet, local economy indicators. Specially, this dataset estimates household consumption, measure of local financial friction, and measure of local nominal friction (Downward Nominal Wage Rigidity).\n(Version 0.0.2 is available now! Newly added 04-19 identified net worth shock and spatial weight matrices)\n","date":"April 15, 2025","externalUrl":null,"permalink":"/code/countyplus/","section":"Data and code","summary":"CountyPlus is an open-source panel dataset that covers 3000+ U.S. counties from 2003 to 2019.This dataset estimates household consumption, measure of local financial friction, and measure of local nominal friction (Downward Nominal Wage Rigidity). Project URL: \u003ccode\u003ehttps://github.com/Clpr/CountyPlus\u003c/code\u003e","title":"CountyPlus","type":"code"},{"content":"","date":"April 15, 2025","externalUrl":null,"permalink":"/tags/data/","section":"Tags","summary":"","title":"Data","type":"tags"},{"content":"","date":"April 15, 2025","externalUrl":null,"permalink":"/tags/stata/","section":"Tags","summary":"","title":"Stata","type":"tags"},{"content":"Syllabus: PDF ","date":"December 5, 2022","externalUrl":null,"permalink":"/teach/2022_emory_econ112/","section":"Teaching","summary":"Fall 2022, Emory University","title":"ECON 112: Principles of Macroeconomics","type":"teach"},{"content":" content/about.md # Hi there!\n","externalUrl":null,"permalink":"/about/","section":"homepage","summary":"","title":"","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"This page displays my research projects.\nWorking paper # Frictions, net worth shocks, and heterogenous impacts (with Cheng Ding; under review at American Economic Journal: Macroeconomics) Work in progress # Financial dollarization, exchange rate, and macroprudential policy (with Cheng Ding, Vivian Yue, and Aliaksandr Zaretski) Saving rate and entrepreneurship in post-2010 China (with Kaiji Chen and Kai Zhao) Journal articles # Population aging and its effects on the gap of Urban Public Health Insurance in China . (2021) China Economic Review. with Yunyun Jiang and Haitao Zheng Socioeconomic status and morbidity rate inequality in China: Based on NHSS and CHARLS data . (2019) IJERPH. with Yunyun Jiang and Haitao Zheng Conference \u0026amp; seminar # 2025 Chinese Economists Society 2025 North America Annual Conference, University of Michigan 2024 Brownbag seminar, Nov 20, Federal Reserve Bank of Atlanta 30th Anniversary of the Midwest Macroeconomics Meetings, Purdue University International Conference on Empirical Economics, session chair, Pennsylvania State University at Altoona (virtual) Other research # Human Stone Toolmaking Action Grammar (HSTAG): A Challenging Benchmark for Fine-grained Motor Behavior Recognition . (2024) IEEE DSAA. with Cheng Liu et al. ","externalUrl":null,"permalink":"/research/","section":"homepage","summary":"","title":"Research","type":"page"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]